{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./src/views/mybackgarden/backgarden/interviewquestions/components/Anchor.vue?3b70","webpack:///./src/views/mybackgarden/backgarden/interviewquestions/components/Anchor.vue","webpack:///./src/views/mybackgarden/backgarden/interviewquestions/components/Anchor.vue?115a","webpack:///./src/views/mybackgarden/backgarden/interviewquestions/components/Anchor.vue?42a1","webpack:///./src/views/mybackgarden/backgarden/interviewquestions/index.vue","webpack:///./src/views/mybackgarden/backgarden/interviewquestions/index.vue?d293","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./src/views/mybackgarden/backgarden/interviewquestions/index.vue?e2fc"],"names":["fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","stickyHelpers","fails","UNSUPPORTED_Y","arrayPush","push","min","Math","MAX_UINT32","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","re","originalExec","exec","apply","this","arguments","result","split","length","SPLIT","nativeSplit","maybeCallNative","internalSplit","separator","limit","string","String","lim","undefined","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","RegExp","source","slice","index","test","O","splitter","res","done","value","rx","S","C","unicodeMatching","p","q","A","e","z","i","class","anchorList","item","key","selectedAnchorId","id","jumpTo","name","props","components","setup","srcolls","document","getElementById","scrollIntoView","block","behavior","propsSelectedAnchorId","render","__scopeId","scrollView","querySelector","anchorEle","getElementsByClassName","Array","from","timer","addEventListener","ev","scrollTop","target","console","log","clearTimeout","setTimeout","forEach","selectItemOffsetTop","offsetTop","selectedClassName","className","$","isArray","isObject","toObject","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","spreadable","FORCED","proto","forced","arg","k","len","E","n","TypeError"],"mappings":"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","file":"js/chunk-36558076.50a59b62.js","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var res = maybeCallNative(internalSplit, this, string, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(this);\n      var S = String(string);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? S.slice(q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../../../node_modules/style-resources-loader/lib/index.js??ref--10-oneOf-1-4!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Anchor.vue?vue&type=style&index=0&id=0b344fc6&scoped=true&lang=less\"","<template>\n  <div>\n    <div class=\"anchor-position\">\n      <ul>\n        <li\n          v-for=\"(item, index) in anchorList\"\n          :key=\"index\"\n          :class=\"`${item.class} ${selectedAnchorId === item.id && 'item-click'}`\"\n          @click=\"jumpTo(item.id)\"\n        >\n          {{ item.name }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref, watch } from \"vue\";\n\ninterface anchorListParams {\n  name: string;\n  id: string;\n  class: string;\n}\n\nexport default defineComponent({\n  name: \"Measure\",\n  props: [\"propsSelectedAnchorId\"],\n  components: {},\n  setup(props) {\n    const selectedAnchorId = ref<string>(\"anchor1\");\n    const anchorList = ref<anchorListParams[]>([\n      {\n        id: \"anchor1\",\n        name: \"HTTP/HTTPS协议\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor2\",\n        name: \"vue和react相同点、不同点\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor3\",\n        name: \"js设计模式\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor4\",\n        name: \"在浏览器输入url敲击回车后发生了什么\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor5\",\n        name: \"vue数据双向绑定原理\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor6\",\n        name: \"（vue/react）组件传值\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor7\",\n        name: \"nodejs的了解\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor8\",\n        name: \"es6的了解\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor9\",\n        name: \"原型&原型链\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor10\",\n        name: \"什么是虚拟 DOM\",\n        class: \"anchor-item\",\n      },\n    ]);\n    const jumpTo = (id: string) => {\n      selectedAnchorId.value = id;\n      // if (item.id === id) item.class = \"anchor-item item-click\";\n      let srcolls = document.getElementById(id);\n      srcolls?.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n    };\n    watch(\n      () => props.propsSelectedAnchorId as string,\n      (value) => {\n        selectedAnchorId.value = value;\n      }\n    );\n\n    return {\n      selectedAnchorId,\n      anchorList,\n      jumpTo,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"less\">\n.anchor-position {\n  position: fixed;\n  right: 0px;\n  top: 147px;\n  width: 140px;\n  padding-left: 25px;\n  background-color: white;\n  .anchor-item {\n    margin: 7px 0;\n    align-items: center;\n    padding: 5px 5px;\n    cursor: pointer;\n    font-size: 12px;\n    &:hover {\n      background: rgba(213, 234, 255, 0.66);\n    }\n  }\n  ul {\n    list-style-type: circle;\n  }\n  .item-click {\n    color: @activedColor;\n  }\n}\n</style>\n","\nimport { defineComponent, ref, watch } from \"vue\";\n\ninterface anchorListParams {\n  name: string;\n  id: string;\n  class: string;\n}\n\nexport default defineComponent({\n  name: \"Measure\",\n  props: [\"propsSelectedAnchorId\"],\n  components: {},\n  setup(props) {\n    const selectedAnchorId = ref<string>(\"anchor1\");\n    const anchorList = ref<anchorListParams[]>([\n      {\n        id: \"anchor1\",\n        name: \"HTTP/HTTPS协议\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor2\",\n        name: \"vue和react相同点、不同点\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor3\",\n        name: \"js设计模式\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor4\",\n        name: \"在浏览器输入url敲击回车后发生了什么\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor5\",\n        name: \"vue数据双向绑定原理\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor6\",\n        name: \"（vue/react）组件传值\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor7\",\n        name: \"nodejs的了解\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor8\",\n        name: \"es6的了解\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor9\",\n        name: \"原型&原型链\",\n        class: \"anchor-item\",\n      },\n      {\n        id: \"anchor10\",\n        name: \"什么是虚拟 DOM\",\n        class: \"anchor-item\",\n      },\n    ]);\n    const jumpTo = (id: string) => {\n      selectedAnchorId.value = id;\n      // if (item.id === id) item.class = \"anchor-item item-click\";\n      let srcolls = document.getElementById(id);\n      srcolls?.scrollIntoView({ block: \"start\", behavior: \"smooth\" });\n    };\n    watch(\n      () => props.propsSelectedAnchorId as string,\n      (value) => {\n        selectedAnchorId.value = value;\n      }\n    );\n\n    return {\n      selectedAnchorId,\n      anchorList,\n      jumpTo,\n    };\n  },\n});\n","import { render } from \"./Anchor.vue?vue&type=template&id=0b344fc6&scoped=true\"\nimport script from \"./Anchor.vue?vue&type=script&lang=ts\"\nexport * from \"./Anchor.vue?vue&type=script&lang=ts\"\n\nimport \"./Anchor.vue?vue&type=style&index=0&id=0b344fc6&scoped=true&lang=less\"\nscript.render = render\nscript.__scopeId = \"data-v-0b344fc6\"\n\nexport default script","<template>\n  <div class=\"page-container\" id=\"interview-questions-scroll-view\">\n    <div class=\"content\">\n      <Anchor :propsSelectedAnchorId=\"selectedAnchorId\" />\n      <h3 id=\"anchor1\" class=\"anchorele anchor1\">HTTP/HTTPS协议</h3>\n      <div class=\"wrapper\">\n        <p class=\"level2-title\">1.HTTP</p>\n        <div class=\"wrapper-content\">\n          超文本传输协议，是一个基于请求与响应，无状态的，应用层的协议，常基于TCP/IP协议传输数据，互联网上应用最为广泛的一种网络协议,所有的WWW文件都必须遵守这个标准。设计HTTP的初衷是为了提供一种发布和接收HTML页面的方法。\n        </div>\n        <p class=\"level2-title\">1.1.HTTP特点</p>\n        <div class=\"wrapper-content\">\n          <ul>\n            <li>1.无状态：协议对客户端没有状态存储，对事物处理没有“记忆”能力，比如访问一个网站需要反复进行登录操作</li>\n            <li>\n              2.无连接：HTTP/1.1之前，由于无状态特点，每次请求需要通过TCP三次握手四次挥手，和服务器重新建立连接。比如某个客户机在短时间多次请求同一个资源，服务器并不能区别是否已经响应过用户的请求，所以每次需要重新响应请求，需要耗费不必要的时间和流量。\n            </li>\n            <li>3.基于请求和响应：基本的特性，由客户端发起请求，服务端响应 简单快速、灵活</li>\n            <li>4.通信使用明文、请求和响应不会对通信方进行确认、无法保护数据的完整性</li>\n          </ul>\n        </div>\n        <p class=\"level2-title\">2.HTTPS</p>\n        <div class=\"wrapper-content\">\n          <ul>\n            <li>HTTPS是身披SSL外壳的HTTP。</li>\n            <li>\n              HTTPS是一种通过计算机网络进行安全通信的传输协议，经由HTTP进行通信，利用SSL/TLS建立全信道，加密数据包。HTTPS使用的主要目的是提供对网站服务器的身份认证，同时保护交换数据的隐私与完整性。\n            </li>\n          </ul>\n        </div>\n        <p class=\"level2-title\">2.2.HTTPS特点</p>\n        <div class=\"wrapper-content\">\n          <ul>\n            <li>1.内容加密：采用混合加密技术，中间者无法直接查看明文内容</li>\n            <li>2.验证身份：通过证书认证客户端访问的是自己的服务器</li>\n            <li>3.保护数据完整性：防止传输的内容被中间人冒充或者篡改</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"content\">\n      <h3 id=\"anchor2\" class=\"anchorele anchor2\">vue和react相同点、不同点</h3>\n      <div class=\"wrapper\">\n        <p class=\"level2-title\">一、相同点</p>\n        <div class=\"wrapper-content\">\n          <ul>\n            <li>利用虚拟DOM实现快速渲染</li>\n            <li>轻量级</li>\n            <li>响应式组件</li>\n            <li>服务器端渲染</li>\n            <li>易于集成路由工具，打包工具以及状态管理工具</li>\n            <li>优秀的支持和社区</li>\n            <li>一切都是组件，组件实例之间可以通信并嵌套，并且都使用了Virtual Dom的思想。</li>\n          </ul>\n        </div>\n        <p class=\"level2-title\">二、不同点</p>\n        <div class=\"wrapper-content\">\n          <ul>\n            <li>\n              vue本质是MVVM框架，是由MVC发展而来的（双向数据流），React本质是前端组件化框架，是由后端组件化发展而来的（单向数据流）\n            </li>\n            <li>\n              vue是一个更小更灵活，适合开发单页面程序的简单化组件。 React是一个适合数据经常变化及构建大型项目的复杂组件\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <div class=\"content\">\n      <h3 id=\"anchor3\" class=\"anchorele anchor3\">js设计模式</h3>\n      <div class=\"wrapper\">\n        <p class=\"level2-title\">1.单例模式</p>\n        <p class=\"level2-title\">2.策略模式</p>\n        <div class=\"wrapper-content\">定义一系列的算法，把它们一个个封装起来，并且使它们可以相互替换。</div>\n        <p class=\"level2-title\">3.代理模式</p>\n        <p class=\"level2-title\">4.迭代模式</p>\n        <div class=\"wrapper-content\">\n          迭代器模式是指提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露该对象的内部表示。\n        </div>\n        <p class=\"level2-title\">5.发布—订阅模式</p>\n        <div class=\"wrapper-content\">\n          也称作观察者模式，定义了对象间的一种一对多的依赖关系，当一个对象的状态发\n          生改变时，所有依赖于它的对象都将得到通知\n        </div>\n        <v-md-preview\n          text=\"```js\n          // 订阅\n          document.body.addEventListener('click', function() { console.log('click1'); }, false);\n          document.body.addEventListener('click', function() { console.log('click2'); }, false);\n          // 发布\n          document.body.click(); // click1 click2\n          \"\n        ></v-md-preview>\n        <p class=\"level2-title\">6.命令模式</p>\n        <p class=\"level2-title\">7.组合模式</p>\n        <div class=\"wrapper-content\">\n          是用小的子对象来构建更大的 对象，而这些小的子对象本身也许是由更小 的“孙对象”构成的。\n        </div>\n        <p class=\"level2-title\">8.装饰者模式</p>\n        <div class=\"wrapper-content\">\n          以动态地给某个对象添加一些额外的职责，而不会影响从这个类中派生的其他对象。\n          是一种“即用即付”的方式，能够在不改变对 象自身的基础上，在程序运行期间给对象动态地 添加职责\n        </div>\n        <p class=\"level2-title\">9.状态模式</p>\n        <div class=\"wrapper-content\">\n          事物内部状态的改变往往会带来事物的行为改变。在处理的时候，将这个处理委托给当前的状态对象即可，该状态对象会负责渲染它自身的行为\n        </div>\n        <p class=\"level2-title\">10.外观模式</p>\n        <div class=\"wrapper-content\">\n          为子系统中的一组接口提供一个一致的界面，定义一个高层接口，这个接口使子系统更加容易使用\n        </div>\n        <v-md-preview\n          text=\"```js\n          // 三个处理函数\n          function start() {\n              console.log('start');\n          }\n\n          function doing() {\n              console.log('doing');\n          }\n\n          function end() {\n              console.log('end');\n          }\n\n          // 外观函数，将一些处理统一起来，方便调用\n          function execute() {\n              start();\n              doing();\n              end();\n          }\n\n          // 调用init开始执行\n          function init() {\n              // 此处直接调用了高层函数，也可以选择越过它直接调用相关的函数\n              execute();\n          }\n\n          init(); // start doing end\n          \"\n        ></v-md-preview>\n      </div>\n    </div>\n    <div class=\"content\">\n      <h3 id=\"anchor4\" class=\"anchorele anchor4\">在浏览器输入url敲击回车后发生了什么</h3>\n      <div class=\"wrapper\">\n        <p class=\"level2-title\">概述</p>\n        在浏览器输入URL回车之后，主要发生以下六个行为：\n\n        <div>1、URL解析</div>\n        <div>2、域名解析</div>\n        <div>3、tcp连接</div>\n        <div>4、http请求</div>\n        <div>5、响应请求</div>\n        <div>6、页面渲染</div>\n\n        <p>\n          详细链接：<a href=\"https://www.jianshu.com/p/a0dbffd9bd43\" target=\"_blank\"\n            >https://www.jianshu.com/p/a0dbffd9bd43</a\n          >\n        </p>\n      </div>\n    </div>\n    <div class=\"content\">\n      <h3 id=\"anchor5\" class=\"anchorele anchor5\">vue数据双向绑定原理</h3>\n      <div class=\"wrapper\">\n        <p class=\"level2-title\">一、原理分析</p>\n        <ul>\n          <li>1. new Vue() 首先执行初始化，对data执行响应化处理，这个过程发生在Observer中</li>\n          <li>2. 同时对模板执行编译，找到其中动态绑定的数据，从data中获取并初始化视图，这个过程发生在Compile中</li>\n          <li>3. 同时定义一个更新函数和Watcher，将来对应数据变化时Watcher会调用更新函数</li>\n          <li>4. 由于data的某个key在一个视图中可能出现多次，所以每个key都需要一个管家Dep来管理多个Watcher</li>\n          <li>5. 将来data中数据一旦发生变化，会首先找到对应的Dep，通知所有Watcher执行更新函数</li>\n        </ul>\n        <p class=\"level2-title\">二、实现思路</p>\n        <ul>\n          <li>1. 监听数据变化（数据劫持/数据代理）[Object.defineProperty]</li>\n          <li>2. 收集视图依赖了哪些数据 （依赖收集）</li>\n          <li>3. 数据变化时，自动“通知”视图需要修改哪些部分，并进行更新 （发布订阅模式）</li>\n        </ul>\n        <p class=\"level2-title\">三、实现简单的双向绑定</p>\n\n        <v-md-preview\n          text=\"```js\n          <input type='text' id='input' />\n          <p id='data'></p>\n          <script>\n              const obj = {};\n              const input = document.getElementById('input');\n              // 数据劫持，实现数据->视图的绑定\n              Object.defineProperty(obj, 'name', {\n                  configurable: true,\n                  enumerable: true,\n                  get() {\n                      return input.value;\n                  },\n                  set(newVal) {\n                      input.value = newVal;\n                      document.getElementById('data').innerHTML = newVal;\n                  }\n               });\n              // 监听输入框，实现视图->数据的绑定\n              input.addEventListener('keyup', () => {\n                  obj.name = input.value;\n              })\n          </script>\n          \"\n        ></v-md-preview>\n      </div>\n    </div>\n\n    <div class=\"content\">\n      <h3 id=\"anchor6\" class=\"anchorele anchor6\">（vue/react）组件传值</h3>\n      <div class=\"wrapper\">\n        <p class=\"level2-title\">一、vue组件传值</p>\n        <p>1、父组件传给子组件</p>\n        <v-md-preview\n          text=\"```js\n           // Children.vue\n           props:['msg'],\n           data() {\n               return {\n                   myMsg:this.msg\n               }\n           }\n\n           // Parent.vue\n           <Children :msg='message'></Children>\n          \"\n        ></v-md-preview>\n        <p>2、子组件传给父组件</p>\n        <p>// 在子组件中使用this.$emit(‘myEvent’) 触发，然后在父组件中使用@myEvent监听</p>\n        <v-md-preview\n          text=\"```js\n         // Children.vue\n         // 通过自定义事件addNum把值传给父组件\n         this.$emit('addNum',this.childNum++)\n\n         // Parent.vue\n         <Children-Com @addNum='getNum'></Children-Com>\n         methods:{\n            // childNum是由子组件传入的\n            getNum(childNum){\n                this.parentNum = childNum\n            }\n          }\n        \"\n        ></v-md-preview>\n        <p>3、兄弟组价间传值</p>\n        <div>\n          <p>1.子组建A通过$emit监听自定义事件，向父组件传值，然后父组件再通过props将值传递给子组件</p>\n          <p>2.总线传值 $emit + $on</p>\n        </div>\n        <p>4、使用$ref传值</p>\n        <div>通过$ref的能力，给子组件定义一个ID，父组件通过这个ID可以直接访问子组件里面的方法和属性</div>\n        <p>5、使用依赖注入传给后代子孙曾孙</p>\n        <p>假设父组件有一个方法 getName()，需要把它提供给所有的后代</p>\n        <v-md-preview\n          text=\"```js\n          // provide 选项允许我们指定我们想要提供给后代组件的数据&方法\n\n          provide: function () {\n            return {\n              getName: this.getName()\n            }\n          }\n\n          // 然后在任何后代组件里，我们都可以使用 inject 来给当前实例注入父组件的数据/方法：\n\n          inject: ['getName']\n        \"\n        ></v-md-preview>\n        <p class=\"level2-title\">二、react组件传值</p>\n        <p><strong>组件传值的分类</strong></p>\n        <ul>\n          <li>1. 按嵌套关系分：父子传值和兄弟传值(意思是指跨组件传值)</li>\n          <li>2. 按传值方法分：props，ref，context，redux</li>\n        </ul>\n        <ul class=\"ul-disc\">\n          <li><strong>1、 父组件向子组件传值</strong></li>\n          <div>父组件向子组件传值 也是通过 props 来传，在子组件中用 this.props.xx 接收父组件传来的值</div>\n          <li><strong>2. 子组件向父组件传值</strong></li>\n          <div>通过 事件传递 + callback 实现</div>\n          <li><strong>3. 子组件向子组件传值（包括兄弟组件）</strong></li>\n          <div>\n            通过总线bus 、 bus.emit(‘xx’,{data})、 bus.on(‘xx’,data=>{}) 来传值；传值的组件用\n            bus.emit(‘xx’,{data})传值，接收值的组件用 bus.on(‘xx’,data=>{}) 来接收传来的值\n          </div>\n          <li><strong>4. 通过context上下文传值</strong></li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"content\">\n      <h3 id=\"anchor7\" class=\"anchorele anchor7\">nodejs的了解</h3>\n      <div class=\"wrapper\">\n        nodejs是一个基于ChromeV8引擎的JavaScript运行环境，一个让JavaScript运行在服务端的开发平台，让脚本语言JavaScript能作为服务器语言。\n        <p>node的优点：超强的高并发能力、使用JavaScript语法等。</p>\n        <ul class=\"ul-disc\">\n          <li>http用来处理请求响应的模块</li>\n          <li>fs 用来读取文件的模块</li>\n          <li>url 用来解析请求数据等等</li>\n          <li>Node.js还集成了 Npm 包管理工具，让我们可以很方便的通过命令行就能下载我们项目依赖的包</li>\n          <li>让前端工程模块化，开发迅速，降低代码耦合度，可维护性大大增强。</li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"content\">\n      <h3 id=\"anchor8\" class=\"anchorele anchor8\">es6的了解</h3>\n      <div class=\"wrapper\">\n        <ul class=\"ul-disc\">\n          <li>1. var、let、const各自的特点及其区别</li>\n          <br />\n          <pre>\n    在ES6之前只有全局作用域和局部作用域，ES6新增了块级作用域let和const,下面将简单介绍var、let和const的特点以及区别。\n    块级作用域：只能在声明的区域（代码块）中使用，不能在声明的区域的外部使用，否则报（xxx is not defined）。\n    var：使用var声明的变量，其作用域为该变量所在的函数内，且存在变量提升现象（变量提升：可以先使用再声明），不会受到块级作用域的影响\n    let：ES6新增的块级作用域\n    1：使用let声明的变量具有块级作用域:，只能在当前声明的代码块中使用，必须要先声明再使用\n    2：具有暂时性死区特性。 const：ES6中新增的常量（常量：值（内存地址）不可更改的量）。特点如下：\n\n    3.1：具有块级作用域的特点，只能在当前声明的代码块中使用，必须要先声明再使用。\n    3.2：声明常量时必须赋值，如果不赋值报错：Missing initializer in const declaration（在const声明中未初始化）。\n    3.3：const声明的常量不可更改。\n    3.4：使用const声明的常量如果是基本数据类型（比如：数字、字符串），一旦赋值，值不可以更改；\n    如果是引用数据类型（数组，对象），不能重新赋值，但是可以更改数据结构内部的值（比如修改对象中的属性）\n          </pre>\n          <li>2. 箭头函数</li>\n          <br />\n          <div>\n            <p>2.1、 箭头函数相当于匿名函数，并且简化了函数定义</p>\n            <p>2.2、 箭头函数没有原型prototype，因此箭头函数没有this指向</p>\n            <p>\n              2.3、\n              箭头函数没有自己的this指向，它会捕获自己定义所处的外层执行环境，并且继承这个this值。箭头函数的this指向在被定义的时候就确定了，之后永远都不会改变。\n            </p>\n          </div>\n        </ul>\n      </div>\n    </div>\n    <div class=\"content\">\n      <h3 id=\"anchor9\" class=\"anchorele anchor9\">原型&原型链</h3>\n      <div class=\"wrapper\">\n        <p>\n          原型：每一个对象都有一个prototype属性可以挂载要扩展的属性和方法，在prototype上挂载的属性和方法在这个对象的任何实例上都可以调用。\n        </p>\n        <p>\n          当一个对象调用自身不存在的属性/方法时，就会去prototype关联的父类对象上去找，如果找不到继续去父类关联的对象上去找，直到找到Object的属性和方法，找到直到调用，找不到返回undefined\n        </p>\n      </div>\n    </div>\n    <div class=\"content\">\n      <h3 id=\"anchor10\" class=\"anchorele anchor10\">什么是虚拟 DOM</h3>\n      <div class=\"wrapper\">\n        <p>一、 起源</p>\n        <div>虚拟dom最先是由facebook团队提出的，最先运用在react中，之后在vue2.0版本中引入了虚拟DOM的概念</div>\n        <p>二、 虚拟 DOM 实现原理</p>\n        <ul>\n          <li>\n            1. 用 JavaScript 对象结构表示 DOM 树的结构，比如说：一个元素对象，包含TagName、props 和\n            Children这些属性。然后根据这个对象构建一个真正的 DOM 节点， 插到文档当中；\n          </li>\n          <li>2. 当数据状态变更的时候，重新构造一棵新的对象树。通过diff 算法，比较新旧虚拟 DOM 树的差异。</li>\n          <li>3. 根据差异，对真正的 DOM 树进行增、删、改。</li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { nextTick, ref } from \"vue\";\nimport Anchor from \"./components/Anchor.vue\";\n\nconst selectedAnchorId = ref(\"anchor1\");\n\nnextTick(() => {\n  const scrollView = document.querySelector(\"#interview-questions-scroll-view\");\n  let anchorEle = document.getElementsByClassName(\"anchorele\");\n  anchorEle = Array.from(anchorEle);\n  let timer = null;\n  scrollView.addEventListener(\"scroll\", function (ev) {\n    const scrollTop = ev.target.scrollTop;\n    if (timer != null) {\n      console.log(\"节流中\");\n      // 一直清除定时器\n      clearTimeout(timer);\n    }\n    // 只有最后一次定时器有效执行\n    timer = setTimeout(function () {\n      anchorEle.forEach((item) => {\n        const selectItemOffsetTop = item.offsetTop;\n        if (scrollTop - selectItemOffsetTop > -251) {\n          const selectedClassName = item.className.split(\" \")[1];\n          selectedAnchorId.value = selectedClassName;\n        }\n      });\n    }, 500);\n  });\n  //节流函数\n});\n</script>\n\n<style lang=\"less\" scoped>\nh3 {\n  color: red;\n}\nul {\n  list-style-type: none;\n}\n.ul-disc {\n  list-style-type: disc;\n}\n.page-container {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  overflow-y: scroll;\n  padding: 30px;\n  .content {\n    .wrapper {\n      padding: 10px 10px 10px 40px;\n      .level2-title {\n        font-weight: bolder;\n        letter-spacing: 2px;\n      }\n      .wrapper-content {\n        text-indent: 2em;\n      }\n    }\n  }\n}\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=1e08834e&lang=less&scoped=true\"\nscript.__scopeId = \"data-v-1e08834e\"\n\nexport default script","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../../node_modules/style-resources-loader/lib/index.js??ref--10-oneOf-1-4!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./index.vue?vue&type=style&index=0&id=1e08834e&lang=less&scoped=true\""],"sourceRoot":""}