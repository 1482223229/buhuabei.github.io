(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-083d832a"],{1078:function(e,t,n){"use strict";n.r(t);n("b0c0");var a=n("7a23"),l=function(e){return Object(a["pushScopeId"])("data-v-80549c70"),e=e(),Object(a["popScopeId"])(),e},r={class:"typescript-view"},c={class:"content"},u=l((function(){return Object(a["createElementVNode"])("h3",null,"JavaScript 与 TypeScript 的区别",-1)})),s=l((function(){return Object(a["createElementVNode"])("div",{class:"wrapper"}," TypeScript 是 JavaScript 的超集，扩展了 JavaScript 的语法，因此现有的 JavaScript 代码可与 TypeScript 一起工作无需任何修改，TypeScript 通过类型注解提供编译时的静态类型检查。 TypeScript 可处理已有的 JavaScript 代码，并只对其中的 TypeScript 代码进行编译。 ",-1)})),p=l((function(){return Object(a["createElementVNode"])("h3",null,"要求数据类型是数值",-1)})),o={class:"wrapper"},i=l((function(){return Object(a["createElementVNode"])("span",null,"+  50  =  ",-1)})),b=l((function(){return Object(a["createElementVNode"])("h3",null,"要求数据类型是字符串",-1)})),y={class:"wrapper"},m=l((function(){return Object(a["createElementVNode"])("span",null,"20  ",-1)})),d=l((function(){return Object(a["createElementVNode"])("h3",null,"数据类型是any",-1)})),V={class:"wrapper"},g=l((function(){return Object(a["createElementVNode"])("span",null,"20  ",-1)})),j={class:"wrapper"},O=l((function(){return Object(a["createElementVNode"])("span",null,"20  ",-1)})),v=l((function(){return Object(a["createElementVNode"])("h3",null,"接口：interface",-1)})),S={class:"wrapper"},I=l((function(){return Object(a["createElementVNode"])("span",null,"姓名：  ",-1)})),N=l((function(){return Object(a["createElementVNode"])("span",null,"性别：  ",-1)})),E=l((function(){return Object(a["createElementVNode"])("h3",null,"联合类型&类型断言",-1)})),f={class:"wrapper"},h=l((function(){return Object(a["createElementVNode"])("div",null,[Object(a["createElementVNode"])("p",null,[Object(a["createElementVNode"])("strong",null,"使用类型断言有两种方式：＜类型＞值 或者 值 as 类型")])],-1)})),A=l((function(){return Object(a["createElementVNode"])("span",null,'"huabei bu".length',-1)})),x=l((function(){return Object(a["createElementVNode"])("span",null,"  =  ",-1)})),T={class:"wrapper"},w=l((function(){return Object(a["createElementVNode"])("span",null,"12345467890.toString().length",-1)})),L=l((function(){return Object(a["createElementVNode"])("span",null,"  =  ",-1)})),D=l((function(){return Object(a["createElementVNode"])("h3",null,"Typescript类的修饰符",-1)})),F=l((function(){return Object(a["createElementVNode"])("div",{class:"wrapper"},[Object(a["createElementVNode"])("p",null,[Object(a["createElementVNode"])("strong",null,"public :公有 在当前类里面、 子类 、类外面都可以访问")]),Object(a["createElementVNode"])("p",null,[Object(a["createElementVNode"])("strong",null," protected：保护类型 在当前类里面、子类里面可以访问，在类外部没法访问 ")]),Object(a["createElementVNode"])("p",null,[Object(a["createElementVNode"])("strong",null," private ：私有 在当前类里面可以访问，子类、类外部都没法访问 ")]),Object(a["createElementVNode"])("p",null,[Object(a["createElementVNode"])("strong",null,"属性如果不加修饰符 默认就是 公有 （public）")]),Object(a["createElementVNode"])("p",null,[Object(a["createElementVNode"])("strong",null,"readonly: 只读")])],-1)}));function J(e,t,n,l,J,H){var k=Object(a["resolveComponent"])("v-md-preview");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",r,[Object(a["createElementVNode"])("div",c,[u,s,p,Object(a["createElementVNode"])("div",o,[Object(a["createElementVNode"])("span",null,Object(a["toDisplayString"])(e.valueState.typeIsNumber.typeValue)+"  ",1),i,Object(a["createElementVNode"])("span",null,Object(a["toDisplayString"])(e.valueState.typeIsNumber.resultValue),1)]),Object(a["createVNode"])(k,{text:e.textHightLight.typeIsNumber},null,8,["text"]),b,Object(a["createElementVNode"])("div",y,[m,Object(a["createElementVNode"])("span",null,"+  "+Object(a["toDisplayString"])(e.valueState.typeIsString.typeValue)+"  =  ",1),Object(a["createElementVNode"])("span",null,Object(a["toDisplayString"])(e.valueState.typeIsString.resultValue),1)]),Object(a["createVNode"])(k,{text:e.textHightLight.typeIsString},null,8,["text"]),d,Object(a["createElementVNode"])("div",V,[g,Object(a["createElementVNode"])("span",null,"+  "+Object(a["toDisplayString"])(e.valueState.typeIsAny.typeValue1)+"  =  ",1),Object(a["createElementVNode"])("span",null,Object(a["toDisplayString"])(e.valueState.typeIsAny.resultValue1),1)]),Object(a["createElementVNode"])("div",j,[O,Object(a["createElementVNode"])("span",null,"+  "+Object(a["toDisplayString"])(e.valueState.typeIsAny.typeValue2)+"  =  ",1),Object(a["createElementVNode"])("span",null,Object(a["toDisplayString"])(e.valueState.typeIsAny.resultValue2),1)]),Object(a["createVNode"])(k,{text:e.textHightLight.typeIsAny},null,8,["text"]),v,Object(a["createElementVNode"])("div",S,[I,Object(a["createElementVNode"])("span",null,Object(a["toDisplayString"])(e.valueState.typeIsInterFace.name)+"  ",1),N,Object(a["createElementVNode"])("span",null,Object(a["toDisplayString"])(e.valueState.typeIsInterFace.sex),1)]),Object(a["createVNode"])(k,{text:e.textHightLight.typeIsInterFace},null,8,["text"]),E,Object(a["createElementVNode"])("div",f,[h,A,x,Object(a["createElementVNode"])("span",null,Object(a["toDisplayString"])(e.valueState.typeIsAs.stringValueLength),1)]),Object(a["createElementVNode"])("div",T,[w,L,Object(a["createElementVNode"])("span",null,Object(a["toDisplayString"])(e.valueState.typeIsAs.numberValueLength),1)]),Object(a["createVNode"])(k,{text:e.textHightLight.typeIsAs},null,8,["text"]),D,F])])}var H=n("5530"),k=(n("d3b7"),n("25f0"),Object(a["defineComponent"])({components:{},setup:function(){var e=Object(a["reactive"])({valueState:{typeIsNumber:{typeValue:100,resultValue:0},typeIsString:{typeValue:"21",resultValue:""},typeIsAny:{typeValue1:"undefined",typeValue2:"null",resultValue1:"",resultValue2:""},typeIsInterFace:{name:"",sex:""},typeIsAs:{numberValueLength:0,stringValueLength:0}}}),t=function(t){e.valueState.typeIsNumber.resultValue=50+t},n=function(t){e.valueState.typeIsString.resultValue="20"+t},l=function(t){void 0===t?e.valueState.typeIsAny.resultValue1=20+t:e.valueState.typeIsAny.resultValue2=20+t},r=function(t){e.valueState.typeIsInterFace=Object(H["a"])({},t)},c=function(t){t.length?e.valueState.typeIsAs.stringValueLength=t.length:e.valueState.typeIsAs.numberValueLength=t.toString().length};return Object(a["onMounted"])((function(){var a,u;a="huabei bu",u=1234567890,t(e.valueState.typeIsNumber.typeValue),n(e.valueState.typeIsString.typeValue),l(void 0),l(null),r({name:a,sex:"男"}),c(a),c(u)})),Object(H["a"])(Object(H["a"])({},Object(a["toRefs"])(e)),{},{computerTypeIsNumber:t,computerTypeIsString:n,computerTypeIsAny:l,computerTypeIsAs:c,textHightLight:{typeIsNumber:"```js\n          const computerTypeIsNumber = (value : number) => { \n              state.valueState.typeIsNumber.resultValue = 50 + value; \n          };\n          computerTypeIsString(100) \n        ",typeIsString:"```js\n          const computerTypeIsString = (value: string) => {\n             state.valueState.typeIsString.resultValue = '20' + value; \n          };\n          computerTypeIsString('21')  \n        ",typeIsAny:"```js\n          const computerTypeIsAny = (value: any) => {\n             state.valueState.typeIsAny.resultValue = '20' + value; \n          };\n          computerTypeIsAny(undefined); // NaN \n          computerTypeIsAny(null); // 20 \n        ",typeIsInterFace:"```java \n          interface myMsgInterFace { \n            name: string; \n            sex: string; \n          } \n          const computerTypeIsInterFace = (value: myMsgInterFace) => { \n            state.valueState.typeIsInterFace = { ...value }; \n          }; \n          computerTypeIsInterFace({ name: 'huabei bu', sex: '男' }); \n        ",typeIsAs:"```js \n          const computerTypeIsAs = (value: string | number) => { \n            if ((value as string).length) { \n              state.valueState.typeIsAs.stringValueLength = (value as string).length; \n            } else { \n              state.valueState.typeIsAs.numberValueLength = value.toString().length; \n            } \n          }; \n          ```注意事项：类型断言并不是普通意义上的类型转换，断言成一个联合类型中不存在的类型是不允许的：``` \n          function toBoolean(something: string | number): boolean { \n              return <boolean>something; \n          }\n          // Type 'string | number' cannot be converted to type 'boolean' \n        "}})}}));n("564a");k.render=J,k.__scopeId="data-v-80549c70";t["default"]=k},"25f0":function(e,t,n){"use strict";var a=n("6eeb"),l=n("825a"),r=n("d039"),c=n("ad6d"),u="toString",s=RegExp.prototype,p=s[u],o=r((function(){return"/a/b"!=p.call({source:"a",flags:"b"})})),i=p.name!=u;(o||i)&&a(RegExp.prototype,u,(function(){var e=l(this),t=String(e.source),n=e.flags,a=String(void 0===n&&e instanceof RegExp&&!("flags"in s)?c.call(e):n);return"/"+t+"/"+a}),{unsafe:!0})},"564a":function(e,t,n){"use strict";n("793a")},"793a":function(e,t,n){}}]);
//# sourceMappingURL=chunk-083d832a.d1bd43c4.js.map